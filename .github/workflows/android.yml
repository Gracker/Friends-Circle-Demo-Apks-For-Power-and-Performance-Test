name: Android CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true
      
    - name: Make Gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Decode Keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > release.keystore
        chmod 600 release.keystore
      
    - name: Get version info
      id: version
      run: |
        echo "BUILD_TIME=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      
    - name: Setup Android app signing
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEYSTORE_FILE_PATH: ${{ github.workspace }}/release.keystore
        KEYSTORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      run: ./gradlew assembleRelease --parallel
      
    - name: Rename APK files with version info
      run: |
        # 创建release目录
        mkdir -p release-apks
        
        # 重命名Release APKs
        if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          cp app/build/outputs/apk/release/app-release.apk "release-apks/HighPerformanceFriendsCircle-release-${{ steps.version.outputs.BUILD_TIME }}-${{ steps.version.outputs.SHORT_SHA }}.apk"
        fi
        
        if [ -f "wechatfriendforperformance/build/outputs/apk/release/wechatfriendforperformance-release.apk" ]; then
          cp wechatfriendforperformance/build/outputs/apk/release/wechatfriendforperformance-release.apk "release-apks/WeChatFriendForPerformance-release-${{ steps.version.outputs.BUILD_TIME }}-${{ steps.version.outputs.SHORT_SHA }}.apk"
        fi
        
        if [ -f "wechatfriendforpower/build/outputs/apk/release/wechatfriendforpower-release.apk" ]; then
          cp wechatfriendforpower/build/outputs/apk/release/wechatfriendforpower-release.apk "release-apks/WeChatFriendForPower-release-${{ steps.version.outputs.BUILD_TIME }}-${{ steps.version.outputs.SHORT_SHA }}.apk"
        fi
        
        if [ -f "wechatfriendforwebview/build/outputs/apk/release/wechatfriendforwebview-release.apk" ]; then
          cp wechatfriendforwebview/build/outputs/apk/release/wechatfriendforwebview-release.apk "release-apks/WeChatFriendForWebView-release-${{ steps.version.outputs.BUILD_TIME }}-${{ steps.version.outputs.SHORT_SHA }}.apk"
        fi
        
        # 列出所有生成的文件
        echo "Generated APK files:"
        ls -la release-apks/
      
    - name: Upload APKs as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: all-apks-${{ steps.version.outputs.BUILD_TIME }}
        path: release-apks/
        retention-days: 30
        
    - name: Create Release (only on push to master)
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: auto-build-${{ steps.version.outputs.BUILD_TIME }}
        name: "自动构建 ${{ steps.version.outputs.BUILD_TIME }}"
        body: |
          🚀 **自动构建发布 (Release版本)**
          
          📅 **构建时间**: ${{ steps.version.outputs.BUILD_TIME }}
          🔗 **提交**: ${{ steps.version.outputs.SHORT_SHA }}
          🌿 **分支**: ${{ steps.version.outputs.BRANCH_NAME }}
          
          ## 📦 包含的APK文件
          
          ### 🎯 Release版本 (已签名，生产就绪)
          - HighPerformanceFriendsCircle-release - 主应用模块
          - WeChatFriendForPerformance-release - 性能测试模块  
          - WeChatFriendForPower-release - 功耗测试模块
          - WeChatFriendForWebView-release - WebView测试模块
          
          ## 📝 说明
          - ✅ Release版本，已使用正式签名密钥签名
          - ✅ 优化版本，性能更好，体积更小
          - ✅ 所有APK都通过了自动化构建和签名验证
          - ✅ 可直接安装使用，适合生产环境
          
          ## 🔧 安装说明
          1. 下载对应的APK文件
          2. 在Android设备上启用"允许安装未知来源应用"
          3. 直接安装APK文件即可使用
          
          ---
          💡 这是通过GitHub Actions自动生成的正式发布版本
        files: release-apks/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
